/* eslint-disable */
export default async () => {
    const t = {
        ["./metrics/dto/metrics.dto"]: await import("./metrics/dto/metrics.dto"),
        ["./auth/dto/token-response.dto"]: await import("./auth/dto/token-response.dto"),
        ["./transactions/dto/transaction.dto"]: await import("./transactions/dto/transaction.dto"),
        ["./users/dto/user.dto"]: await import("./users/dto/user.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./metrics/dto/metrics.dto"), { "MemoryMetricsDto": { total: { required: true, type: () => String }, used: { required: true, type: () => String }, free: { required: true, type: () => String }, usedPercentage: { required: true, type: () => String }, appUsed: { required: true, type: () => String } }, "CpuMetricsDto": { currentLoad: { required: true, type: () => String }, cores: { required: true, type: () => Number } }, "DiskMetricsDto": { mount: { required: true, type: () => String }, size: { required: true, type: () => String }, used: { required: true, type: () => String }, available: { required: true, type: () => String }, usedPercentage: { required: true, type: () => String } }, "InternetStatusDto": { status: { required: true, type: () => Object }, latency: { required: true, type: () => String, nullable: true } }, "SystemInfoDto": { os: { required: true, type: () => String }, version: { required: true, type: () => String }, uptime: { required: true, type: () => String } }, "AppUsageDto": { ram: { required: true, type: () => String }, cpu: { required: true, type: () => String } }, "ProcessInfoDto": { name: { required: true, type: () => String }, pid: { required: true, type: () => Number } }, "CpuProcessDto": { cpu: { required: true, type: () => String } }, "MemoryProcessDto": { memory: { required: true, type: () => String } }, "ProcessMetricsDto": { topCpuProcesses: { required: true, type: () => [t["./metrics/dto/metrics.dto"].CpuProcessDto] }, topMemoryProcesses: { required: true, type: () => [t["./metrics/dto/metrics.dto"].MemoryProcessDto] } }, "NetworkInterfaceDto": { iface: { required: true, type: () => String }, ip4: { required: true, type: () => String }, mac: { required: true, type: () => String }, speed: { required: true, type: () => String }, rx: { required: true, type: () => String }, tx: { required: true, type: () => String } }, "BatteryInfoDto": { hasBattery: { required: true, type: () => Boolean }, charging: { required: true, type: () => Boolean }, percentage: { required: true, type: () => String }, timeLeft: { required: true, type: () => String } }, "TemperatureInfoDto": { main: { required: true, type: () => String }, cores: { required: true, type: () => [String] }, max: { required: true, type: () => String } }, "DiskIOMetricsDto": { read: { required: true, type: () => String }, write: { required: true, type: () => String } }, "SystemMetricsDto": { memory: { required: true, type: () => t["./metrics/dto/metrics.dto"].MemoryMetricsDto }, cpu: { required: true, type: () => t["./metrics/dto/metrics.dto"].CpuMetricsDto }, disk: { required: true, type: () => t["./metrics/dto/metrics.dto"].DiskMetricsDto }, internet: { required: true, type: () => t["./metrics/dto/metrics.dto"].InternetStatusDto }, system: { required: true, type: () => t["./metrics/dto/metrics.dto"].SystemInfoDto }, appUsage: { required: true, type: () => t["./metrics/dto/metrics.dto"].AppUsageDto }, topProcesses: { required: true, type: () => t["./metrics/dto/metrics.dto"].ProcessMetricsDto }, networkInterface: { required: true, type: () => t["./metrics/dto/metrics.dto"].NetworkInterfaceDto, nullable: true }, battery: { required: true, type: () => t["./metrics/dto/metrics.dto"].BatteryInfoDto }, temperature: { required: true, type: () => t["./metrics/dto/metrics.dto"].TemperatureInfoDto }, diskIO: { required: true, type: () => t["./metrics/dto/metrics.dto"].DiskIOMetricsDto } } }], [import("./users/dto/user.dto"), { "UserWithPasswordDto": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } }, "UserDto": {} }], [import("./users/dto/create-user.dto"), { "CreateUserDto": {} }], [import("./auth/dto/login.dto"), { "LoginDto": { email: { required: true, type: () => String, format: "email" }, password: { required: true, type: () => String } } }], [import("./auth/dto/token-response.dto"), { "TokenResponseDto": { accessToken: { required: true, type: () => String } } }], [import("./shared/dto/error-response.dto"), { "ErrorResponseDto": { statusCode: { required: true, type: () => Number }, timestamp: { required: true, type: () => String }, path: { required: true, type: () => String }, message: { required: true, type: () => String }, error: { required: true, type: () => String } } }], [import("./transactions/dto/transaction.dto"), { "TransactionDto": { id: { required: true, type: () => Number }, date: { required: true, type: () => Date }, amount: { required: true, type: () => Number }, description: { required: true, type: () => String }, type: { required: true, type: () => Object }, userId: { required: true, type: () => Number }, categoryId: { required: true, type: () => Number }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, deletedAt: { required: true, type: () => Date } } }], [import("./transactions/dto/create-transaction.dto"), { "CreateTransactionDto": {} }], [import("./transactions/dto/update-transaction.dto"), { "UpdateTransactionDto": {} }], [import("./transactions/dto/filter-transaction.dto"), { "FilterTransactionDto": { date: { required: false, type: () => Object }, amount: { required: false, type: () => Number }, description: { required: false, type: () => String }, type: { required: false, type: () => Object }, createdAt: { required: false, type: () => Object }, updatedAt: { required: false, type: () => Object }, categoryId: { required: false, type: () => Number } } }], [import("./contabo/dto/create-server.dto"), { "CreateServerDto": { name: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./contabo/dto/reset-server.dto"), { "ResetServerDto": {} }], [import("./users/dto/update-user.dto"), { "UpdateUserDto": {} }], [import("./shared/dto/metrics.dto"), { "MetricsRequestDto": { type: { required: true, type: () => String }, filters: { required: false, type: () => Object } }, "MetricsResponseDto": { type: { required: true, type: () => String }, value: { required: true, type: () => Number }, timestamp: { required: true, type: () => Number } } }]], "controllers": [[import("./auth/controllers/auth.controller"), { "AuthController": { "signIn": { type: t["./auth/dto/token-response.dto"].TokenResponseDto }, "signUp": { type: t["./auth/dto/token-response.dto"].TokenResponseDto } } }], [import("./transactions/controllers/transaction.controller"), { "TransactionController": { "create": { type: t["./transactions/dto/transaction.dto"].TransactionDto }, "get": { type: [t["./transactions/dto/transaction.dto"].TransactionDto] }, "getById": { type: t["./transactions/dto/transaction.dto"].TransactionDto }, "update": { type: t["./transactions/dto/transaction.dto"].TransactionDto }, "delete": { type: t["./transactions/dto/transaction.dto"].TransactionDto } } }], [import("./users/controllers/user.controller"), { "UserController": { "get": { type: [t["./users/dto/user.dto"].UserDto] }, "getById": { type: t["./users/dto/user.dto"].UserDto } } }], [import("./contabo/controllers/contabo.controller"), { "ContaboController": { "create": { type: Object }, "getServerList": { type: Object }, "getImagesList": { type: Object }, "resetServer": { type: Object }, "syncServer": {} } }]] } };
};